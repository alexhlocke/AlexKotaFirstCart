pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
--fishing game üê± 
--by alex & kota
-------------------------------

function _init()
 --set color palette
 reset_pal()
 --shortcuts to make it easier
	--to reset pal
	p=pal
	rp=reset_pal

 --create fish arcetypes
 init_fish()
 
 --set update/draw
 _upd=update_game
 _drw=draw_game
 
 --init game
 init_game()
end


function _update()
 _upd()
 debug[1]="cpu: "..stat(1)
 debug[2]="mem: "..stat(0)
end


function _draw()
 _drw()
end


--== random helpers ==----------

--printing

--prints with a border
function bprint(text,x,y,c,bc)
 for i=x-1,x+1 do
  for j=y-1,y+1 do
   print(text,i,j,bc)
  end
 end
 print(text,x,y,c)
end

--prints with a centered border
--(set x=63 to center on screen)
function bprint_cent(str,x,y,c,bc)
 bprint(str,x-(#str*2),y,c,bc)
end


--sprites

--outlined sprite
function ospr(c, n, x, y, w, h, flip_x, flip_y)
	w = w or 1
	h = h or 1
	flip_x = flip_x or false
	flip_y = flip_y or false
	
	pal({[0]=c,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c}, 0)
	
	spr(n, x-1, y, w, h, flip_x, flip_y)
	spr(n, x+1, y, w, h, flip_x, flip_y)
	spr(n, x, y-1, w, h, flip_x, flip_y)
	spr(n, x, y+1, w, h, flip_x, flip_y)

	pal(0)
	
	spr(n, x, y, w, h, flip_x, flip_y)
end

--outlined special sprite
function osspr(c, sx, sy, sw, sh, dx, dy, dw, dh)
	w = w or 1
	h = h or 1
	flip_x = flip_x or false
	flip_y = flip_y or false
	
	pal({[0]=c,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c}, 0)
	
	sspr(sx,sy,sw,sh,dx-1,dy,dw,dh)
	sspr(sx,sy,sw,sh,dx,dy-1,dw,dh)
	sspr(sx,sy,sw,sh,dx+1,dy,dw,dh)
	sspr(sx,sy,sw,sh,dx,dy+1,dw,dh)
	
	pal(0)
	
	sspr(sx,sy,sw,sh,dx,dy,dw,dh)
end


--prints outlined sprites



--colors

--reset color palette
function reset_pal()
 --poke( 0x5f2e, 1 ) --endable hidden colors
 custom_palette = {[0]=0,1,140,12,131,3,139,130,136,14,142,143,15,13,6,7}
 pal( custom_palette, 1 )
end


--== debug stuff ==-------------

--debug
debug={}

show_debug=false
function print_debug()
 for i=1,10 do
  if(debug[i]!=nil) then
   bprint(debug[i],cam.x+1,cam.y+1+(i-1)*6,8,0)
  end
 end
end
-->8
--game / menu


--== game ==--------------------


function init_game()
 --freeze player
 player.state="frozen"
 
 --set pallete
 poke( 0x5f2e, 1 ) --endable hidden colors
 custom_palette = {[0]=0,1,140,12,131,3,139,130,136,14,142,143,15,13,6,7}
	pal( custom_palette, 1 )
	
	--debug
	--add show debug menu item
	menuitem(1,"debug on/off",function()show_debug = not show_debug end)
end


--== update ==-----------------
function update_game() 
 --update/move player
 update_player()
 
 --update minigame if active
 if(do_minigame)update_minigame()
 
 --update cam
 update_cam()
 
 --update fx
 update_fx()
 
 --debug
 if(btnp(‚ùé))start_fishing()
end


--== draw ==--------------------
function draw_game()
 cls(2)
 
 --drawbg
 --clouds
 draw_clouds()
 
 --draw water
 draw_water(110) --water y
 
 --draw map
 map()
 --water to block map (ghetto)
 rectfill(384,256,700,7000,2) 
 rectfill(384,256,700,7000,2) 

 --draw player
 draw_player()
 
 --==fishing==--
 if do_minigame then
  draw_minigame()
 end
 
 
 --== draw foreground details
 draw_fx()
 		
 
 --draw main menu
 if(show_menu)draw_main_menu()


 --== debug stuff
 
 --fish display [debug]
 --display_fish=rnd(fishes)
 if(btn(‚¨ÜÔ∏è))then
  display_fish=fishes[6]
  draw_fish_got(display_fish)
 else
  display_fish=rnd(fishes)
 end
 
 if(show_debug)print_debug()
end 


--== main menu ==---------------
show_menu=false

--displays menu overlay on top
--of game
function draw_main_menu()
 --stop drawing menu if btn
 if(btn(‚ùé)or btn(üÖæÔ∏è)) then 
  show_menu=false
  player.state="walking"
 end

 print("‚òÖ this is the main menu ‚òÖ",10,60,14)
 print("‚àßpress ‚ùé or üÖæÔ∏è to continue‚àß",4,67,14)
end

function draw_background()
	sspr(32,32,32,32,0,0,128,180)
end

-->8
--fish

--‚òÖ todo: shinies

--[[ fish structure
 name, scale, sprt (sprite #)
 , w, h (sprite width/height)
 ,shinycols
]]--

fishes={
} --arcetype table

--add fish to fishes table
function make_fish(name,sprt,w,h,scale,shinycols)
 add(fishes,
  {name=name
  ,sprt=sprt
  ,w=w,h=h
  ,scale=scale
  ,shinycols=shinycols}
 )
end

--fully populates fishes table
--‚óÜthis can be optimized for
--tokens if need be
function init_fish()
 --default scale = 2
 --1x1 fish
 make_fish("mOSS sLUG"
  ,135,1,1,2,{{6,3},{5,2},{4,1}})
 make_fish("fish 1"
  ,136,1,1,2)
 make_fish("fish 2"
  ,137,1,1,2)
 make_fish("fish 3"
  ,138,1,1,2)
 make_fish("fish 4"
  ,152,1,1,2)
 make_fish("pINKTAIL"
  ,153,1,1,2,{{8,2},{9,3},{2,8},{3,9}})
 make_fish("sHRIMP"
  ,154,1,1,1)
 make_fish("jUMBO sHRIMP"
  ,154,1,1,3)
 make_fish("fish 7"
  ,155,1,1,2)
 make_fish("fish 8"
  ,136,1,1,2)
  
 --1x2 fish
 make_fish("aXOLITTLE"
  ,168,2,1,2)
 make_fish("fish 10"
  ,184,2,1,2)
  
 --2x2 fish
 make_fish("fish 11"
  ,170,2,2,2)
 make_fish("fish 12"
  ,172,2,2,2)
 make_fish("aMGLERFISH"
  ,174,2,2,2,{{6,15},{5,15},{4,15},{1,14},{7,13},{11,0},{12,15}})
 
 --xl fish
 make_fish("sWORDFISH"
  ,140,4,2,3,{{3,9},{2,8},{1,7}})
 
 
-- make_fish("rainbow trout"
--  ,184,2,1,2)
-- make_fish("betta"
--  ,22,2,1,1)
-- make_fish("bluegill"
--  ,8,1,1,1)  
-- make_fish("goldfish"
--  ,9,1,1,1)
-- make_fish("shad"
--  ,10,1,1,1)
-- make_fish("neon tetra"
--  ,24,1,1,1)
-- make_fish("shrimp"
--  ,25,1,1,1)
-- make_fish("minnow"
--  ,26,1,1,1)
-- make_fish("swordfish"
--  ,11,4,2,1)
end


--== fish display ==------------


function draw_fish_got(fish)
 --get fish h and w
 local h=fish.h*8
 local w=fish.w*8
 local scale=fish.scale
 --upd scale
 --scale=fish.scale+0.5*sin(t()/4)
 
 --set inverse draw mode + fillp
 poke(0x5f34,0x2)
 --draw border circle
 fillp(‚ñí)
 local circ_rad=65
 circfill(cam.x+64,cam.y+64,circ_rad,1 | 0x1800)
 fillp(‚ñà)
 
 --draw fish/lines
 local y=40
 y+=5*sin(t()/2)
 draw_flourish_lines(cam.x+63,cam.y+y+14)
 
 --draw fish
	osspr(0, fish.sprt%16*8,flr(fish.sprt/16)*8
  ,w,h
  ,cam.x+63-w*scale/2,cam.y+y-h*scale/2
  ,w*scale,h*scale)

 --shiny (debug)
 --set_shiny_pal(fish)
	
 sspr(fish.sprt%16*8,flr(fish.sprt/16)*8
  ,w,h
  ,cam.x+63-w*scale/2,cam.y+y-h*scale/2
  ,w*scale,h*scale)
 
 --complete palette refresh
 p() rp() 
  
 bprint("holy fucking shit",cam.x+30,cam.y+90,15,1)
 bprint("a fucking fish",cam.x+35,cam.y+97,14,1)
end


--item get lines
function draw_flourish_lines(x,y)
	for i=0,16 do
		local s=sin(time() * 2.1 + i/16)
		local c=cos(time() * 2.1 + i/16)
		local ty=y-14
		local r=20
		line(x+s*r,ty+c*r,x+s*40,ty+c*40,15)
	end
end


--shiny pal
function set_shiny_pal(fish)
 if(fish.shinycols==nil)return
 scols=fish.shinycols
 for i=1,#scols do
  pal(scols[i][1],scols[i][2])
 end
end

function reset_shiny_pal(fish)
	if(fish.shinycols==nil)return
 scols=fish.shinycols
 for i=1,#scols do
  pal(scols[i][2],scols[i][1])
 end
end



-->8
--minigame 


--== hook / tables ==------------------

minigame_state="inactive"
--,inactive,starting,sinking,...
do_minigame=false

hook={
  x=447 --default x
 ,y=90 --default y
 ,xmin=385 ,xmax=449
 ,speed=1
 ,xspeed=2
 ,sprt=47
 ,w=1,h=2
 --states: inactive,starting,active
 ,state="inactive"
 
 --upgrade table
 --[[
  populate when upgrades are 
  purchased from shop
 ]]--
 ,upgrades={
  }
}

function draw_hook()
 local s=hook

 --if state=inactive dont draw
 if(s.state!="inactive")then
  ospr(0,s.sprt,s.x,s.y,s.w,s.h)
 end
 
 --draw fishing line
 line(s.x+5,s.y,player.x+9,player.y+10,0)
end


--== state changing ==----------


--start fishing 
function start_fishing()
 --do initial animation
  --player anim
  --move bobber
 
 --set states
 hook.state="active"
 player.state="fishing"
 minigame_state="starting"
 
 do_minigame=true
end


function update_minigame()
 --update hook
 --sink hook
 hook.y+=hook.speed
 
 --hook x movement
 if(btn(‚¨ÖÔ∏è))then
  hook.x-=hook.xspeed
 end
 if(btn(‚û°Ô∏è))then
  hook.x+=hook.xspeed
 end
 
 --clamp hook pos
 if(hook.x<384)hook.x=384
 if(hook.x>504)hook.x=504
end


fishing_bgy=128
fishing_bgy2=256
function draw_minigame()
 --draw water bg
 if(cam.y>128)then
  --cam dif
  cd1=cam.y-fishing_bgy
  cd2=cam.y-fishing_bgy2
  if(cd1>=128)then
   fishing_bgy+=2*cd1
  end
  if(cd2>=128)then
   fishing_bgy2+=2*cd2
  end
  
  --bg map tiles
	 map(48,16,384,fishing_bgy,16,16)
	 map(64,16,384,fishing_bgy2,16,16)
 end
 
 --hook
 draw_hook()
 
 --print ui
 bprint("depth: "..hook.y-70,cam.x+2,cam.y+2,3,1)
end
-->8
--player / cam


--== player table ==-------------


--main x limits for player
--[[
 these can change depending on
 special rooms / states
--]]
main_xl_limit=20
main_xr_limit=407
frame=0
walkframe=0

player={
  x=400, y=81
 ,default_y=81
 ,speed=1
 ,direct=false
 --player sprites
 ,s0=0
 --player x limits
 ,xl_limit=main_xl_limit
 ,xr_limit=main_xr_limit
 --player hitbox
 ,hbox={x1,y1,x2,y2}
 --states: walking,idle,fishing,frozen (for menus)
 ,state="walking"
 ,tail=3
 ,feetsies=18
}


--== player functions ==--------


--update player
function update_player()
 local s=player
 frame+=1
 
 --sprites for animation
	if(frame%4==0) then
		cat_tail()
		walk_spr()
	end
	
	--default state
	if(s.state=="fishing") then
	 --
	else
	 if(btn(‚¨ÖÔ∏è)or btn(‚û°Ô∏è))then
	  s.state="walking"
	 else
	  s.state="idle"
	 end
	end
 
 --== movement ==--
 --if state=walking move
 if(s.state=="walking") then
 
		--sprint if üÖæÔ∏è
		if(btn(üÖæÔ∏è))then
		 s.speed=2
		else
		 s.speed=1
		end
		
		--move player
		if(btn(‚¨ÖÔ∏è))then
		 s.x-=s.speed
		 s.direct=true
		end
		if(btn(‚û°Ô∏è)) then
		 s.x+=s.speed
		 s.direct=false
		end
		
		--clamp pos
		if(s.x<s.xl_limit)then
		 s.x=s.xl_limit
		end
		if(s.x>s.xr_limit)then
		 s.x=s.xr_limit
		end 
		
	end

 
 --== interations ==--
 
 --update hbox
 local hb = s.hbox
 hb.x1=s.x-3
 hb.x2=s.x+18
 hb.y1=s.y-3
 hb.y2=s.y+18
 
 --press ‚ùé to interact
 if(btnp(‚ùé)) then
  --interact with shit
 end
	
	
	--debug
	debug[3]="px: "..player.x.." - py: "..player.y
 debug[4]="state: "..player.state
end


--draw player
function draw_player()
		local s=player
		cat_animation(s.x,s.y)
 
 --debug draw hbox
 if(show_debug)then
 	fillp(‚ñí)
 	local hb=s.hbox
 	rect(hb.x1,hb.y1,hb.x2,hb.y2,8)
 	fillp()
 end
end

--== cat anim


--cat tail sprite--
function cat_tail()
	if(player.tail < 4) then
		player.tail+=1
	else
		player.tail=2
	end
	return player.tail
end

--cat feet sprite--
function walk_spr()
	if(player.feetsies < 20) then
		player.feetsies +=2
	else
		player.feetsies=18
	end
	return player.feetsies
end

--animation of cat
function cat_animation(x,y)
		local s=player
		
			if(s.state == "idle"
			or s.state == "fishing") then
					spr(s.s0,x,y,2,2,s.direct)
					if (s.direct) then
					spr(s.tail,x+14,y+7,1,1,s.direct)
					else
					spr(s.tail,x-7,y+7,1,1)
					end	

			else if (s.state == "walking") then
					spr(s.feetsies,x,y+8,2,1,s.direct)
					if(s.direct) then
					spr(s.tail,x+12,y+2,1,1,s.direct)
					sspr(0,0,14,9,x,y-1,14,9,s.direct)
					else
					spr(s.tail,x-4,y+2,1,1,s.direct)
					sspr(0,0,14,9,x+3,y-1,14,9,s.direct)
					end
			end
	end
end



--== camera ==-------------------

cam={x=0,y=0}

function update_cam()
 --if minigame
 if(player.state=="fishing")then
  cam.x=384
  cam.y=hook.y-40
  camera(cam.x,cam.y)
  return
 end

 local px=player.x

 --stop camera for static rooms
 if(px>0 and px<128)then
  cam.x=0
 end
 if(px>384)then
  cam.x=384
 end
 
 --scrolling town
 if(px>128 and px<384)then
  cam.x=px-59
  if(cam.x<128)cam.x=128
  if(cam.x>256)cam.x=256
 end

 --move camera
 camera(cam.x,cam.y)
end


-->8
--background


--== clouds ==-------------------

bgx=0
bgx2=-30
bgx3=-20
bgx4=-90

cmx=112 cmy=16 --cloud map coords

function draw_clouds()
 --draw static bg
 fillp(‚ñí)
 circfill(cam.x+100,cam.y+155,80,1)
 circfill(cam.x+13,cam.y+155,80,1)
 fillp()

 --update bgx
 bgx-=.6
 if(bgx<-128)bgx=0
 bgx2-=.4
 if(bgx2<-128)bgx2=0
 bgx3-=.3
 if(bgx3<-128)bgx3=0
 bgx4-=.2
 if(bgx4<-128)bgx4=0
 
 --bg clouds
 --single map clouds
 
 --dark bg
 local c=14
 pal({[0]=c,c,c,c,c,c,c,c,c,c,c,c,c,c,14,14},0)
 --palt(14,1)
 --top
 map(cmx,cmy,cam.x+bgx3,cam.y-10,16,6)
 map(cmx,cmy,cam.x+bgx3+128,cam.y-10,32,6)
 --bottom
 map(cmx,cmy+6,cam.x+bgx4,cam.y+78,16,10)
 map(cmx,cmy+6,cam.x+bgx4+128,cam.y+78,32,10)
 --reset pal
 palt(14,0)
 pal(0)
 
 --main
 --top
 map(cmx,cmy,cam.x+bgx,cam.y+0,16,6)
 map(cmx,cmy,cam.x+bgx+128,cam.y+0,32,6)
 --bottom
 map(cmx,cmy+6,cam.x+bgx2,cam.y+68,16,10)
 map(cmx,cmy+6,cam.x+bgx2+128,cam.y+68,32,10)
end

--== fx/particles ==-------------

--== particle system ==--

fxs={} --fx table

--update all fx
function update_fx()
 for fx in all(fxs) do
  --age fxs
  fx.age+=1
  
  --remove timed out fxs
  if(fx.age>fx.life)del(fxs,fx)
  
  --do other udpates
  if(fx.upd!=nil)then
		 fx.upd(fx)
  end
 end
end

--draw all fx
function draw_fx()
 for fx in all(fxs) do
  --if custom draw, do it
  --otherwise color pixel fx.col
  if(fx.draw!=nil)then
   fx.draw(fx)
  else
   pset(fx.x,fx.y,fx.col)
  end
 end
end

--add fx to fx table
---x,y,life,col,upd,drw
function add_fx(x,y,life,col,upd,draw)
 local fx={
   age=0
  ,x=x, y=y
  ,life=life
  ,col=col or 15 --default col=white
  ,upd=upd or nil
  ,draw=draw or nil
 }
 add(fxs,fx)
 return fx
end


--== water ==--

--draw water
function draw_water(wl)--wl=water line
 wl=wl or 80
 rectfill(0,wl,1000,1000,2)
 
 --draws top of water at x pnt
 local xpnt=424
 draw_waterline(wl,xpnt)
 draw_waterline(wl,xpnt)
 draw_waterline(wl,xpnt)
 draw_waterline(wl,xpnt)
 draw_waterline(wl,xpnt)
end

--waterline
function draw_waterline(wl,x)
 add_fx(
   rnd(128)+x
  ,wl
  ,rnd(30)+60
  ,13
  ,function(s)
    if(s.age/s.life>.15)s.col=14
    if(s.age/s.life>.25)s.col=15
    if(s.age/s.life>.75)s.col=14
    if(s.age/s.life>.85)s.col=13
   end
  ,nil
 )
end
__gfx__
00770000007700000000770000007700000007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07cb700007bc70000007cc700007cc7000007cc70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07ccb7777bcc70000007cb700007cb7000007cb70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07bbbbbbbbbb700000007b700007b7000007bb700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77bbb7bbb7bb770000007bb70007b7000007b7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07bbb7bbb7bb7000000007b70007bb770007bb770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77bbbbbcbbbb7700000007bb000077bb000077bb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007bbbbbbbb700000000007700000077000000770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0007aaaaaa7000000000777bbbbb70000000777bbbbb700000000000000000000000000000000000000000000000000000000000000000000000000000000000
007bbbbbbb7000000007cccbbbbbb7000007cccbbbbb700000000000000000000000000000000000000000000000000000000000000000000000000000000000
07bbabbbb70000000007bbbaaaabab700007bbbaaabb700000000000000000000000000000000000000000000000000000000000000000000000000000000000
07babbbbb7000000007b7ba7777a7ab70007bba777ab700000000000000000000000000000000000000000000000000000000000000000000000000000000000
07bbb77bb770000007ba7b7007a707a70007ba707a7a700000000000000000000000000000000000000000000000000000000000000000000000000000000000
07ab7bc7bbc7000007a77a7007a70070007ba7007a7ab70000000000000000000000000000000000000000000000000000000000000000000000000000000000
07aaaaa7aaa7000000707aa707aa7000007a7a70077ab70000000000000000000000000000000000000000000000000000000000000000000000000000000000
00777770777000000000077700777000000777700007700000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ddd0
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d000d
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d000d
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d000d
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ddd0
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d0
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d0
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dd
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f0000d
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ee0000d
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dd00000d
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dd00000d
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d000000d
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d10000dd
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dd1111d0
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dddddd0
66666666666666666666666677777777000000000000000000000033333333333333333333000000122333330000000000000000eeffffffeffeefffffffffff
66666666666666666666666677777777000000000000000000000222222222222222222222200000112222220000000000000000efffeeffeefeeeefffeefeff
55555555555555555555555577777777000000000000000000002221111111111111111112220000711111110000000000000000fffeeeefeeffeeeffeeeffff
54545454545454545454545477777777000000000000000000032211111111111111111111223000a71111110000000000000000feffffffeeeffeeefeefffff
44444444444444444444444477777777000000000000000000322111777777777777777711122300777777770000000000000000eeffeffefeefeeeeffffffff
7777777774777777777747777777777700000000000000003322117bbb7bbba7bbbba7bb771122337aaa7aaa0000000000000000eeefffeeffffeeffffffefff
777777777747777777757777777777770000000000000000222117a7aa7aaaa7aaaaa7aa7a7112227bbb7bbb0000000000000000ffeeeffefffeeeeffffefffe
77777777757777777777577777777777000000000000000011117ba777777777777777777aa71111777777770000000000000000fefffffffeeeefefffffffee
0000000000000000000000007777777777777777bb7acba7007acba7baaaa7bb777777777aba700033333221000000000000000000000ffffeefe00000000000
0090900000c0c00000007a007777777777777777777acba7007acba7777777777ff7ffa77aba700022222211000000000000000000fefeefeefffee000000000
0089900000acc000bbbb7abb77edd77777777777bb7acba7007acba7ba7bbbbb7cf7cfa77aba70001111111700000000000000000ffffeeefffffff000000000
0088900000aac00077777a7777ddd7777ed77777aa7acba7007acba7aa7bbbaa7cc7cca77aba70001111117a0000000000000000eefeeeeefffeeeef00000000
050500000505000000007a0077ddd7777dd77777777acba7007acba777777777777777777aba7000777777770000000000000000effefeeffefffeef00000000
0045400000454000bbbb7abb7777777777777777bb7acba7007acba7bbbba7bb7ff7ffa77aba7000aa7aaaa70000000000000000fffffffeeeefffff00000000
000400000004000077777a7777777ed777777777aa7acba7007acba7bbaaa7bb7cf7cfa77aba7000bb7bbbb70000000000000000feeefffffeefffff00000000
00040000000400000000770077777dd777777777777acba7007acba7777777777aa7aaa77aba7000777777770000000000000000eeeffffffffffeef00000000
00000000000000000000000000000000b9afa7bb7aba7ba7007acba7bbbaa7bbbbbaa7bb7aba7000007777000000000000000000ffeefeffffefffef00000000
00000000000000000000000000000000789977777aba7777007a54a777777777777777777aba7000ab7cc7ba0000000000000000feeeeffffeeeffee00000000
00000000000000000000000000000000ba8bbbbb7aba7bbb0075cb47b67bbbbbba7bb5b47a6a70007abbbba70000000000000000feeeeffffeeffffe00000000
00000000000000000000000000000000454b6baa7aba7aaa0075cba4aa5b5baaaa7bbb5a7ab5700077aaaa7700000000000000000ffeffffffffefff00000000
00000000000000000000000000000000744477777aba7777007a6ba474777577775777747aba40007c7777a700000000000000000efeefefffffeffe00000000
00000000000000000000000000000000de4ee7bb7aba7bb7005acba44bbb574bb4bba7bb7ab470007b7ba7a700000000000000000fffffeeeffeefe000000000
000000000000000000000000000000007ddd77bb7aba7aa70074b5a4b4a4a4b5bb4aa7bb7a4a70007b7ba7a7000000000000000000feffeeeffeefe000000000
00000000000000000000000000000000777777777aba7777004a4a4747474747747777774ab470007b7ba7a70000000000000000000eeffefffff00000000000
01111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000088000088
11dd1111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000008
11d11111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1d111dd1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111dd11000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
111dd111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11dd1111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000008
01111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000088000088
000000000000000000000000000000000000000000000000000000006060000000eee00000060600000c00c0000000000000000000000000ff00000000000000
00000000000000000000000000000000000000000000000000000000505000000eedde000065600000b0000c40000000000000000000003f1000000000000000
0000000000000000000000000000000000000000000000000000000005656500ed7dd40e044440000bbb000b0445600000000000000033210000000000000000
000000000000000000000000000000000000000000000000000000006656565044de441041555406b7bbb0ba4155550600000000000322100000000000000000
000000000000000000000000000000000000000000000000000000005056565601444101cbbbb450abbbaba0fffeedf000000000003221200000000000000000
0000000000000000000000000000000000000000000000000000000044141414001110000aaa40040aaa0ab00dddd00d000000000f32121100000000000033ff
0000000000000000000000000000000000000000000000000000000001717170000e00000005000000b000ab000e000000000000f221212110000003000f2220
00000000000000000000000000000000000000000000000000000000000000000000f00000006000000c000a0000f00000000000333322222200002000322200
000000000000000000000000000000000000000000000000000000000000000000000000000000000cccbc000000f00000000003222223333311112033222100
00000000000000000000000000000000000000000000000000000000000000000000000000000000c7bbabc0000c000000003332232233333333333322211000
0000000000000000000000000000000000000000000000000000000000000000000ff000000ef0000aaa0abc00c7c000332222f7232233333333322311100000
00000000000000000000000000000000000000000000000000000000000000000ffeef0f0ff33f090b0b00bb07c7b70c00011177322223333222221122210000
0000000000000000000000000000000000000000000000000000000000000000e7eddeede722229800c0c0cbc7b7b7b000000011111122222211112011221000
00000000000000000000000000000000000000000000000000000000000000000dd777d00ddd7780000000ca07b7a70a00000000022211111120002000112000
0000000000000000000000000000000000000000000000000000000000000000000e000d000e00080c000cba00ab700000000000003220000020000300001230
00000000000000000000000000000000000000000000000000000000000000000000f0000000f00000bbbaa0000a00000000000000033f000003000000000000
00000000000000000000000000000000000000000000000000000000000000000000009000000000000000005544000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000009800090000000000005564000000000000cc000000000007700000000000
0000000000000000000000000000000000000000000000000000000000000000099980098000ccc0000005664000000000000cbba00000000070070000000000
000000000000000000000000000000000000000000000000000000000000000099f79988000c999800005556640005500000cbbba00000000700007000000000
000000000000000000000000000000000000000000000000000000000000000099779999999999870005666555505665000aaaaaaaa00000cc00065550000000
0000000000000000000000000000000000000000000000000000000000000000899998889887888705565566666566400abbddbbddba0aa0fc00654445000066
000000000000000000000000000000000000000000000000000000000000000008878777877077705665f75666646400abf7bddbbddbadda0006545444550545
000000000000000000000000000000000000000000000000000000000000000000000890089000004565775665546400ab77bddbbddbddda00654f1444444450
000000000000000000000000000000000000000000000000000000000000000000000056560000000446556656446640aaaaa77aa77a77770044511444114150
000000000000000000000000000000000000000000000000000000000000000000044444456000000004555554004664077a77aa77a707700004455411140415
00000000000000000000000000000000000000000000000000000000000000006445555554440046000044454000044000077777777000000600041111400044
0000000000000000000000000000000000000000000000000000000000000000057f9999ccc564600000046400000000000007aa700000000055411114050000
000000000000000000000000000000000000000000000000000000000000000000558888999c4850000000560000000000000077000000000000544440000000
0000000000000000000000000000000000000000000000000000000000000000654bbbbbccc40495000000046000000000000000000000000000005110000000
00000000000000000000000000000000000000000000000000000000000000000000450004500044000000000000000000000000000000000000000551000000
00000000000000000000000000000000000000000000000000000000000000000000046000600000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000007f7f00000000000000000000000000007f7f00000000000000000000000000007f7f00000000000000000000000000000040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000040400000000000000000000000000000404000000000000000000000000000004040000000000000000000000000000040
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000040400000000000000000000000000000404000000000000000000000000000004040000000000000000000000000000040
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000040400000000000000000000000000000404000000000000000000000000000004040000000000000000000000000000040
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000040400000000000000000000000000000404000000000000000000000000000004040000000000000000000000000000040
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000040400000000000000000000000000000404000000000000000000000000000004040000000000000000000000000000040
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000040400000000000000000000000000000404000000000000000000000000000004040000000000000000000000000000040
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000040400000000000000000000000000000404000000000000000000000000000004040000000000000000000000000000040
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000040400000000000000000000000000000404000000000000000000000000000004040000000000000000000000000000040
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000040400000000000000000000000000000404000000000000000000000000000004040000000000000000000000000000040
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000040400000000000000000000000000000404000000000000000000000000000004040000000000000010000000000000040
5252505100510000000000500051000000005000000000510000000051000000005000525252520051000000500000000000000000000000000000000000000040000000000000000000000000000040400000000000000000000000000000404000000000000000000000000000004040000000000000000000000000000040
4140404142424240424140404140404041404040424040404040414240404041404240404040404041404040404042404041404042000000000000000000000040000000000000000000000000000040400000000000000000000000000000404000000000000000000000000000004040000000000000000000000000000040
4343434343434343434354434343434343434343434354434343434343434343434343434343434343544343434343434343434343000000000000000000000040000000000000000000000000000040400000000000000000000000000000404000000000000000000000000000004040000000000000000000000000000040
4343434343434343434343434343435343434343434343434343434354434343434343434343434343434343544343434343534343000000000000000000000040000000000000000000000000000040400000000000000000000000000000404000000000000000000000000000004040000000000000000000000000000040
4343534343434343434343544343434343434343434343435343434343434343434343434343435443434343434343544343434343000000000000000000000040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474434343434343434343434343434343434343434343434343434343434343434340404040404040404040404040404040404040404040404040404040404040404e4f4e5f00006d4e4e4f4e4e4e4f4e4d
740000000000000000000000000000747400000000000000000000000000007474000000000000000000000000000074437000000000000000000000000070434300000000000000000000000000004340000000000000000000000000000040400000000000000000000000000000404e4d4e5e0000006d4f4e4e4f4e4d4f4d
740000000000000000000000000000747400000000000000000000000000007474000000000000000000000000000074437070000000000000000000007070434370000000000000000000000000704340000000000000000000000000000040400000000000000000000000000000404f4e4f4e000000006d6e6d4d4e4e4e4e
740000000000000000000000000000747400000000000000000000000000007474000000000000000000000000000074437070000000000000000000007070434300000000000000000000000070704340000000000000000000000000000040400000000000000000000000000000404e4f4e6e000000000000000000005d4e
740000000000000000000000000000747400000000000000000000000000007474000000000000000000000000000074437070000000000000000000000070434300000000000000000000000070704340000000000000000000000000000040400000000000000000000000000000404e4e6e00000000000000000000006d4e
740000000000000000000000000000747400000000000000000000000000007474000000000000000000000000000074437000000000000000000000000000434300000000000000000000000070704340000000000000000000000000000040400000000000000000000000000000406e00000000000000000000000000006d
7400000000000000000000000000007474000000000000000000000000000074740000000000000000000000000000744300000000000000000000000000004343700000000000000000000000707043400000000000000000000000000000404000000000000000000000000000004000000000000000005d5e000000000000
74000000000000000000000000000074740000000000000000000000000000747400000000000000000000000000007443000000000000000000000000000043437000000000000000000000000070434000000000000000000000000000004040000000000000000000000000000040000000000000005d4e4e000000005f00
74000000000000000000000000000074740000000000000000000000000000747400000000000000000000000000007443700000000000000000000000000043437000000000000000000000000000434000000000000000000000000000004040000000000000000000000000000040000000005d5e5d4e4e6e5f5d5e000000
740000000000000000000000000000747400000000000000000000000000007474000000000000000000000000000074437000000000000000000000007070434370000000000000000000000000004340000000000000000000000000000040400000000000000000000000000000400000005d4f4e4e4e4e4f5e4e4e000000
7400000000000000000000000000007474000000000000000000000000000074740000000000000000000000000000744370700000000000000000007070704343700000000000000000000000000043400000000000000000000000000000404000000000000000000000000000004000005d4e4e6e006d4e4e4e4e4e5e0000
74000000000000000000000000000074740000000000000000000000000000747400000000000000000000000000007443707000000000000000000070707043437000000000000000000000007070434000000000000000000000000000004040000000000000000000000000000040005d4e4e4e0000006d4e4e4e4e6e0000
740000000000000000000000000000747400000000000000000000000000007474000000000000000000000000000074437070000000000000000000707070434370000000000000000000000070704340000000000000000000000000000040400000000000000000000000000000404f4e4f4e4e5e5f00004e4d4e4e4f5e5d
740000000000000000000000000000747400000000000000000000000000007474000000000000000000000000000074437070000000000000000000000070434300000000000000000000000000704340000000000000000000000000000040400000000000000000000000000000404e4e4e4f4e4e5e00004e4e4e4e4e4f4d
740000000000000000000000000000747400000000000000000000000000007474000000000000000000000000000074437000000000000000000000000000434300000000000000000000000000704340000000000000000000000000000040400000000000000000000000000000404e4f4e4e4e4f4e5e5d4f4e4f4e4e4e4e
747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474747474434343434343434343434343434343434343434343434343434343434343434308080808080808080808080808080808080808080808080808080808080808084e4e4e4f4e4e4e4f4e4e4e4e4f4e4f4e
