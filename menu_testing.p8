pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
--fishing game üê± 
--by alex & kota
-------------------------------

function _init()
 --set color palette
 reset_pal()
 --shortcuts to make it easier
	--to reset pal
	p=pal
	rp=reset_pal

 --create fish arcetypes
 init_fish()
 
 --set up interactalbes
 init_interactables()
 
 --set update/draw
 _upd=update_game
 _drw=draw_game
 
 --debug
	--add show debug menu item
	menuitem(1,"debug on/off",function()show_debug = not show_debug end)
 
 --init game
 init_game()
end


function _update()
 _upd()
 debug[1]="cpu: "..stat(1)
 debug[2]="mem: "..stat(0)
end


function _draw()
 _drw()
end


--== random helpers ==----------

--printing

--prints with a border
function bprint(text,x,y,c,bc)
 for i=x-1,x+1 do
  for j=y-1,y+1 do
   print(text,i,j,bc)
  end
 end
 print(text,x,y,c)
end

--prints with a centered border
--(set x=63 to center on screen)
function bprint_cent(str,x,y,c,bc)
 bprint(str,x-(#str*2),y,c,bc)
end


--sprites

--outlined sprite
function ospr(c, n, x, y, w, h, flip_x, flip_y)
	w = w or 1
	h = h or 1
	flip_x = flip_x or false
	flip_y = flip_y or false
	
	pal({[0]=c,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c}, 0)
	
	spr(n, x-1, y, w, h, flip_x, flip_y)
	spr(n, x+1, y, w, h, flip_x, flip_y)
	spr(n, x, y-1, w, h, flip_x, flip_y)
	spr(n, x, y+1, w, h, flip_x, flip_y)

	pal(0)
	
	spr(n, x, y, w, h, flip_x, flip_y)
end

--outlined special sprite
function osspr(c, sx, sy, sw, sh, dx, dy, dw, dh)
	w = w or 1
	h = h or 1
	flip_x = flip_x or false
	flip_y = flip_y or false
	
	pal({[0]=c,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c}, 0)
	
	sspr(sx,sy,sw,sh,dx-1,dy,dw,dh)
	sspr(sx,sy,sw,sh,dx,dy-1,dw,dh)
	sspr(sx,sy,sw,sh,dx+1,dy,dw,dh)
	sspr(sx,sy,sw,sh,dx,dy+1,dw,dh)
	
	pal(0)
	
	sspr(sx,sy,sw,sh,dx,dy,dw,dh)
end


--prints outlined sprites



--colors

--reset color palette
function reset_pal()
 pal()
 --poke( 0x5f2e, 1 ) --endable hidden colors
 custom_palette = {[0]=0,1,140,12,131,3,139,130,136,14,142,143,15,13,6,7}
 pal( custom_palette, 1 )
end


--== debug stuff ==-------------

--debug
debug={}

show_debug=false
function print_debug()
 for i=1,20 do
  if(debug[i]!=nil) then
   bprint(debug[i],cam.x+1,cam.y+1+(i-1)*6,8,0)
  end
 end
end

function draw_hboxs()
 for i in all(interactables) do
  local hb=i.hbox
  fillp(‚ñí)
  rect(hb.x1,hb.y1,hb.x2,hb.y2,8)
  fillp()
 end
end
-->8
--game / menu


--== game ==--------------------


function init_game()
 --start music
 music(0)

 --freeze player
 player.state="frozen"
 
 --set pallete
 poke( 0x5f2e, 1 ) --endable hidden colors
 custom_palette = {[0]=0,1,140,12,131,3,139,130,136,14,142,143,15,13,6,7}
	pal( custom_palette, 1 )
end


--== update ==-----------------
function update_game() 
 --update/move player
 update_player()
 
 --update minigame if active
 if(do_minigame)update_minigame()
 
 --update cam
 update_cam()
 
 --update fx
 update_fx()
 
 --muffle music
 if cam.y>127 and player.state=="fishing" then
  poke(0x5f41, 15)
  poke(0x5f43, 15)
 else
  poke(0x5f41, 0)
  poke(0x5f43, 0)
 end
 
 --debug
 --if(btnp(‚ùé))start_fishing()
end


--== draw ==--------------------
function draw_game()
 cls(2)
 
 --drawbg
 --clouds
 draw_clouds()
 
 --draw water
 draw_water(110) --water y
 
 --draw interior bgs
 rectfill(0,128,383,256,1)
 rectfill(512,128,1080,256,4)
 rectfill(512,232,1080,256,1)
 
 --draw map
 map(0,0,0,0,1000,32)
 
 --water to block map (ghetto)
 rectfill(384,256,512,7000,2)  

 --draw player
 draw_player()
 
 --==fishing==--
 if do_minigame then
  draw_minigame()
 end
 
 
 --== draw foreground details
 draw_fx()
 
 --draw intreactable prompts
 for i in all(interactables) do
  if(col(player,i)) then
   --debug[6]="hit something"
   show_prompt(i)
  end
 end
 		
 
 --draw main menu
 if(show_menu)draw_main_menu()


 --== debug stuff
 --cam.y=128
 --sz=2+sin(t()/3)
 --osspr(3,0,72,16,8,cam.x+10,cam.y+10,16*sz,8*sz)
 
 --fish display [debug]
 --display_fish=rnd(fishes)
 if(btn(‚¨ÜÔ∏è))then
  display_fish=display_fish
  draw_fish_got(display_fish)
 else
  display_fish=rnd(fishes)
 end
 
 if(show_debug)then
  draw_hboxs()
  print_debug()
 end
end 


--== main menu ==---------------
show_menu=true

--displays menu overlay on top
--of game
function draw_main_menu()
 --stop drawing menu if btn
 if(btn(‚ùé)or btn(üÖæÔ∏è)) then 
  show_menu=false
  player.state="walking"
 end

 cx=cam.x
 cy=cam.y
 ovalfill(cx+34,cy+30,cx+90,cy+70,1) 
 osspr(0,0,88,53,37,cx+36,30,53,37)
 
 bprint_cent("pRESS ‚ùé OR üÖæÔ∏è TO CONTINUE",cam.x+60,cam.y+110,15,0)
end

function draw_background()
	sspr(32,32,32,32,0,0,128,180)
end

-->8
--fish

--[[ fish structure
 name, scale, sprt (sprite #)
 , w, h (sprite width/height)
 ,shinycols
]]--

fishes={
} --arcetype table

--add fish to fishes table
function make_fish(name,sprt,w,h,scale,shinycols)
 add(fishes,
  {name=name
  ,sprt=sprt
  ,w=w,h=h
  ,scale=scale
  ,shinycols=shinycols}
 )
end

--fully populates fishes table
--‚óÜthis can be optimized for
--tokens if need be
function init_fish()
 --default scale = 2
 --1x1 fish
 make_fish("mOSS sLUG"
  ,135,1,1,2,{{6,3},{5,2},{4,1}})
 make_fish("fish 1"
  ,136,1,1,2)
 make_fish("fish 2"
  ,137,1,1,2)
 make_fish("fish 3"
  ,138,1,1,2)
 make_fish("fish 4"
  ,152,1,1,2)
 make_fish("pINKTAIL"
  ,153,1,1,2,{{8,2},{9,3},{2,8},{3,9}})
 make_fish("sHRIMP"
  ,154,1,1,1)
 make_fish("jUMBO sHRIMP"
  ,154,1,1,3)
 make_fish("fish 7"
  ,155,1,1,2)
 make_fish("fish 8"
  ,136,1,1,2)
  
 --1x2 fish
 make_fish("aXOLITTLE"
  ,168,2,1,2)
 make_fish("fish 10"
  ,184,2,1,2)
  
 --2x2 fish
 make_fish("fish 11"
  ,170,2,2,2)
 make_fish("fish 12"
  ,172,2,2,2)
 make_fish("aMGLERFISH"
  ,174,2,2,2,{{6,15},{5,15},{4,15},{1,14},{7,13},{11,0},{12,15}})
 
 --xl fish
 make_fish("sWORDFISH"
  ,140,4,2,3,{{3,9},{2,8},{1,7}})
 
 
-- make_fish("rainbow trout"
--  ,184,2,1,2)
-- make_fish("betta"
--  ,22,2,1,1)
-- make_fish("bluegill"
--  ,8,1,1,1)  
-- make_fish("goldfish"
--  ,9,1,1,1)
-- make_fish("shad"
--  ,10,1,1,1)
-- make_fish("neon tetra"
--  ,24,1,1,1)
-- make_fish("shrimp"
--  ,25,1,1,1)
-- make_fish("minnow"
--  ,26,1,1,1)
-- make_fish("swordfish"
--  ,11,4,2,1)
end


--== fish display ==------------


function draw_fish_got(fish)
 --get fish h and w
 local h=fish.h*8
 local w=fish.w*8
 local scale=fish.scale
 --upd scale
 --scale=fish.scale+0.5*sin(t()/4)
 
 --set inverse draw mode + fillp
 poke(0x5f34,0x2)
 --draw border circle
 fillp(‚ñí)
 local circ_rad=65
 circfill(cam.x+64,cam.y+64,circ_rad,1 | 0x1800)
 fillp(‚ñà)
 
 --draw fish/lines
 local y=40
 y+=5*sin(t()/2)
 draw_flourish_lines(cam.x+63,cam.y+y+14)
 
 --draw fish
	osspr(0, fish.sprt%16*8,flr(fish.sprt/16)*8
  ,w,h
  ,cam.x+63-w*scale/2,cam.y+y-h*scale/2
  ,w*scale,h*scale)

 --shiny (debug)
 set_shiny_pal(fish)
	
 sspr(fish.sprt%16*8,flr(fish.sprt/16)*8
  ,w,h
  ,cam.x+63-w*scale/2,cam.y+y-h*scale/2
  ,w*scale,h*scale)
 
 --complete palette refresh
 rp() 
  
 bprint_cent("fISH cAUGHT:",cam.x+63,cam.y+90,15,0)
 if(fish.shiny)then
  bprint_cent("sHINY",cam.x+63,cam.y+98,10,0)  
  bprint_cent(fish.name,cam.x+63,cam.y+105,3,0)  
 else
  bprint_cent(fish.name,cam.x+63,cam.y+98,3,0)
 end
end


--item get lines
function draw_flourish_lines(x,y)
	for i=0,16 do
		local s=sin(time() * 2.1 + i/16)
		local c=cos(time() * 2.1 + i/16)
		local ty=y-14
		local r=20
		line(x+s*r,ty+c*r,x+s*40,ty+c*40,15)
	end
end


--shiny pal
function set_shiny_pal(fish)
 if(fish.shinycols==nil)return
 scols=fish.shinycols
 for i=1,#scols do
  pal(scols[i][1],scols[i][2])
 end
end

function reset_shiny_pal(fish)
	if(fish.shinycols==nil)return
 scols=fish.shinycols
 for i=1,#scols do
  pal(scols[i][2],scols[i][1])
 end
end



-->8
--minigame 


--== hook / tables ==------------------


minigame_state="inactive"
--,inactive,starting,sinking,...
do_minigame=false

hook={
  x=447 --default x
 ,y=90 --default y
 ,xmin=385 ,xmax=449
 ,speed=1
 ,xspeed=2
 ,sprt=47
 ,w=1,h=2
 --states: inactive,starting,active
 ,state="inactive"
 
 --upgrade table
 --[[
  populate when upgrades are 
  purchased from shop
 ]]--
 ,upgrades={
  }
}

function draw_hook()
 local s=hook

 --if state=inactive dont draw
 if(s.state!="inactive")then
  ospr(0,s.sprt,s.x,s.y,s.w,s.h)
 end
 
 --draw fishing line
 line(s.x+5,s.y,player.x+15,player.y+3,0)
end


--== state changing ==----------


--start fishing 
function start_fishing()
 --do initial animation
  --player anim
  --move bobber
 
 --set states
 hook.state="active"
 player.state="fishing"
 minigame_state="starting"
 
 do_minigame=true
end


function update_minigame()
 --update hook
 --sink hook
 hook.y+=hook.speed
 
 --hook x movement
 if(btn(‚¨ÖÔ∏è))then
  hook.x-=hook.xspeed
 end
 if(btn(‚û°Ô∏è))then
  hook.x+=hook.xspeed
 end
 
 --clamp hook pos
 if(hook.x<384)hook.x=384
 if(hook.x>504)hook.x=504
end


--== draw minigame ==--


fishing_bgy=128
fishing_bgy2=256
function draw_minigame()
 --draw water bg
 if(cam.y>128)then
  --cam dif
  cd1=cam.y-fishing_bgy
  cd2=cam.y-fishing_bgy2
  if(cd1>=128)then
   fishing_bgy+=2*cd1
  end
  if(cd2>=128)then
   fishing_bgy2+=2*cd2
  end
  
  --bg map tiles
	 map(48,16,384,fishing_bgy,16,16)
	 map(64,0,384,fishing_bgy2,16,16)
 end
 
 --hook
 draw_hook()
 
 --print ui
 bprint("depth: "..hook.y-70,cam.x+2,cam.y+2,3,1)
end
-->8
--player / cam


--== player table ==-------------


--main x limits for player
--[[
 these can change depending on
 special rooms / states
--]]

main_xl_limit=0
main_xr_limit=408
--interior y player val
int_y=230
default_y=81
frame=0
walkframe=0

player={
  x=400
 ,y=81
 ,default_y=81
 ,speed=1
 ,direct=false
 --player sprites
 ,s0=0
 --player x limits
 ,xl_limit=main_xl_limit
 ,xr_limit=main_xr_limit
 --player hitbox
 ,hbox={x1,y1,x2,y2}
 --states: walking,idle,fishing,frozen (for menus)
 ,state="frozen"
 ,tail=3
 ,feetsies=18
}


--== player functions ==--------


--update player
function update_player()
 local s=player
 frame+=1
 
 if s.frozen then
  debug[9]="player frozen"
 end
 
 --sprites for animation
	if(frame%4==0) then
		cat_tail()
		walk_spr()
	end
	
	--default state
	if(s.state=="fishing"
	or s.state=="frozen") then
	 --
	else
	 if(btn(‚¨ÖÔ∏è)or btn(‚û°Ô∏è))then
	  s.state="walking"
	 else
	  s.state="idle"
	 end
	end
 
 --== movement ==--
 --if state=walking move
 if(s.state=="walking") then
 
		--sprint if üÖæÔ∏è
		if(btn(üÖæÔ∏è))then
		 s.speed=2
		else
		 s.speed=1
		end
		
		--move player
		if(btn(‚¨ÖÔ∏è))then
		 s.x-=s.speed
		 s.direct=true
		end
		if(btn(‚û°Ô∏è)) then
		 s.x+=s.speed
		 s.direct=false
		end
		
		--clamp pos
		if(s.x<s.xl_limit)then
		 s.x=s.xl_limit
		end
		if(s.x>s.xr_limit)then
		 s.x=s.xr_limit
		end 
		
	end

 
 --== interations ==--
 
 --update hbox
 local hb = s.hbox
 hb.x1=s.x
 hb.x2=s.x+15
 hb.y1=s.y-3
 hb.y2=s.y+18
 
 
 --collisions
 for i in all(interactables) do
  if(col(player,i)) then
   if btnp(‚ùé) then
    i.on_click()
   end
  end
 end
 
 --press ‚ùé to interact
 if(btnp(‚ùé)) then
  --interact with shit
 end
	
	
	--debug
	debug[3]="px: "..player.x.." - py: "..player.y
 debug[4]="state: "..player.state
end


--draw player
function draw_player()
	local s=player
	
	--shadow
	--ovalfill(s.x+2,s.y+13,s.x+13,s.y+17,1)
	
	--animate cat sprites
	cat_animation(s.x,s.y)
 
 --debug draw hbox
 if(show_debug)then
 	fillp(‚ñí)
 	local hb=s.hbox
 	rect(hb.x1,hb.y1,hb.x2,hb.y2,8)
 	fillp()
 end
end


--player teleportation
function tp(x,y,camx,camy)
 --default vals
 xp=x or 400
 yp=y or player.default_y
 camx=camx or cam.x
 camy=camy or cam.y
 --move player
 player.x=xp
 player.y=yp
 --move cam
 cam.x=camx
 cam.y=camy
end


function set_player_limits(x1,x2)
 --default x limits
 x1=x1 or main_xl_limit
 x2=x2 or main_xr_limit
 --set player lims
 player.xl_limit=x1
 player.xr_limit=x2
end


--== cat animation ==-----------


--cat tail sprite--
function cat_tail()
	if(player.tail < 4) then
		player.tail+=1
	else
		player.tail=2
	end
	return player.tail
end

--cat feet sprite--
function walk_spr()
	if(player.feetsies < 20) then
		player.feetsies +=2
	else
		player.feetsies=18
	end
	return player.feetsies
end

--animation of cat
function cat_animation(x,y)
	local s=player
	local sstate=s.state
	
	if(sstate == "idle"
	or sstate == "fishing"
	or sstate == "frozen") then
	 --turn player if fishing
	 if(sstate=="fishing")s.direct=false
		spr(s.s0,x,y,2,2,s.direct)
		if (s.direct) then
		spr(s.tail,x+14,y+7,1,1,s.direct)
		else
		spr(s.tail,x-7,y+7,1,1)
		end	

	else if (sstate == "walking") then
		spr(s.feetsies,x,y+8,2,1,s.direct)
		if(s.direct) then
		spr(s.tail,x+12,y+2,1,1,s.direct)
		sspr(0,0,14,9,x,y-1,14,9,s.direct)
		else
		spr(s.tail,x-4,y+2,1,1,s.direct)
		sspr(0,0,14,9,x+3,y-1,14,9,s.direct)
		end
	end
	end
	
	--draw fishing rod if fishing
	if(sstate=="fishing")then
	 ospr(7,37,s.x+9,s.y+4)
	 debug[8]="draw rod"
	end
end



--== camera ==-------------------

cam={x=0,y=0}

function update_cam()
 --if minigame
 if(player.state=="fishing")then
  cam.x=384
  
  if(cam.y < hook.y-42)then
   cam.y+=2
  else
   cam.y=hook.y-40
  end
  
  camera(cam.x,cam.y)
  return
 end

 local px=player.x

 --stop camera for static rooms
 if(px>0 and px<128)then
  cam.x=0
 end
 if(px>384)then
  cam.x=384
 end
 
 --scrolling town/interiors
 --town/shop
 if(px>128 and px<384)then
  cam.x=px-59
  if(cam.x<128)cam.x=128
  if(cam.x>256)cam.x=256
 end
 
 --aquarium
 if(px>512 and px<=768)then
  cam.x=px-59
  if(cam.x<512)cam.x=512
  if(cam.x>640)cam.x=640
 end
 
 --home
 if(px>768 and px<1024)then
  cam.x=px-59
  if(cam.x<768)cam.x=768
  if(cam.x>896)cam.x=896
 end
 

 --move camera
 camera(cam.x,cam.y)
end


-->8
--background


--== clouds ==-------------------

bgx=0
bgx2=-30
bgx3=-20
bgx4=-90

cmx=112 cmy=0 --cloud map coords

function draw_clouds()
 --draw static bg
 fillp(‚ñí)
 circfill(cam.x+100,cam.y+155,80,1)
 circfill(cam.x+13,cam.y+155,80,1)
 fillp()

 --update bgx
 bgx-=.6
 if(bgx<-128)bgx=0
 bgx2-=.4
 if(bgx2<-128)bgx2=0
 bgx3-=.3
 if(bgx3<-128)bgx3=0
 bgx4-=.2
 if(bgx4<-128)bgx4=0
 
 --bg clouds
 --single map clouds
 
 --dark bg
 local c=10
 pal({[0]=c,c,c,c,c,c,c,c,c,c,c,c,c,c,12,12},0)
 --palt(14,1)
 --top
 map(cmx,cmy,cam.x+bgx3,cam.y-10,16,6)
 map(cmx,cmy,cam.x+bgx3+128,cam.y-10,32,6)
 --bottom
 map(cmx,cmy+6,cam.x+bgx4,cam.y+78,16,10)
 map(cmx,cmy+6,cam.x+bgx4+128,cam.y+78,32,10)
 --reset pal
 palt(14,0)
 pal(0)
 
 --main
 --top
 map(cmx,cmy,cam.x+bgx,cam.y+0,16,6)
 map(cmx,cmy,cam.x+bgx+128,cam.y+0,32,6)
 --bottom
 map(cmx,cmy+6,cam.x+bgx2,cam.y+68,16,10)
 map(cmx,cmy+6,cam.x+bgx2+128,cam.y+68,32,10)
end

--== fx/particles ==-------------

--== particle system ==--

fxs={} --fx table

--update all fx
function update_fx()
 for fx in all(fxs) do
  --age fxs
  fx.age+=1
  
  --remove timed out fxs
  if(fx.age>fx.life)del(fxs,fx)
  
  --do other udpates
  if(fx.upd!=nil)then
		 fx.upd(fx)
  end
 end
end

--draw all fx
function draw_fx()
 for fx in all(fxs) do
  --if custom draw, do it
  --otherwise color pixel fx.col
  if(fx.draw!=nil)then
   fx.draw(fx)
  else
   pset(fx.x,fx.y,fx.col)
  end
 end
end

--add fx to fx table
---x,y,life,col,upd,drw
function add_fx(x,y,life,col,upd,draw)
 local fx={
   age=0
  ,x=x, y=y
  ,life=life
  ,col=col or 15 --default col=white
  ,upd=upd or nil
  ,draw=draw or nil
 }
 add(fxs,fx)
 return fx
end


--== water ==--

--draw water
function draw_water(wl)--wl=water line
 wl=wl or 80
 rectfill(0,wl,512,1000,2)
 
 --draws top of water at x pnt
 local xpnt=424
 draw_waterline(wl,xpnt)
 draw_waterline(wl,xpnt)
 draw_waterline(wl,xpnt)
 draw_waterline(wl,xpnt)
 draw_waterline(wl,xpnt)
end

--waterline
function draw_waterline(wl,x)
 add_fx(
   rnd(128)+x
  ,wl
  ,rnd(30)+60
  ,13
  ,function(s)
    if(s.age/s.life>.15)s.col=14
    if(s.age/s.life>.25)s.col=15
    if(s.age/s.life>.75)s.col=14
    if(s.age/s.life>.85)s.col=13
   end
  ,nil
 )
end
-->8
--overworld stuff


--== doors / interactables ==---


interactables={}

function add_interactable(
hbx1,hby1,hbx2,hby2
,prompt,on_click,id)
 add(interactables,{
  hbox={x1=hbx1,y1=hby1,x2=hbx2,y2=hby2}
  ,prompt=prompt
  ,on_click=on_click
  ,id=id or "unindentified"
 })
end


function show_prompt(i) --i=interactabble
 --main prompt
 --print prompt at top of hbox
 xp=i.hbox.x1+((i.hbox.x2-i.hbox.x1)/2)
 yp=i.hbox.y1
 
 --aquarium case
 if(i.id=="aquarium exit")then
  xp+=10
 end
 
 bprint_cent(i.prompt,xp,yp,15,0)
 --show little ‚ùé button
 show_‚ùé(xp-1,yp+9)
end

function show_‚ùé(x,y)
 bprint_cent("‚ùé",x,y,0,0)
 bprint_cent("‚ùé",x,y-sin(t()),15,0)
end


--== filling interact table ==---


function init_interactables()
 --overworld doors
 add_interactable(288,55,328,100
  ,"eNTER hOME"
  ,function() 
    tp(528,int_y-20,512,128)
    set_player_limits(513,752)
   end
  ,"home door")
 add_interactable(184,55,224,100
  ,"eNTER sHOP"
  ,function()
    tp(144,int_y-20,128,128)
    set_player_limits(129,368)
   end
  ,"shop door")
 add_interactable(38,55,88,100
  ,"eNTER aQUARIUM"
  ,function() 
    tp(784,int_y-20,768,128)
    set_player_limits(769,1008)
   end
  ,"aquarium door")
  
 --interior exits
 add_interactable(128,203,168,256
  ,"eXIT sHOP"
  ,function()
    tp(198,default_y,128,0)
    set_player_limits()
   end
  ,"shop exit")
 add_interactable(512,203,552,256
  ,"eXIT hOME"
  ,function()
    tp(302,default_y,128,0)
    set_player_limits()
   end
  ,"home exit")
 add_interactable(768,203,808,256
  ,"eXIT aQUARIUM"
  ,function()
    tp(61,default_y,0,0)
    set_player_limits()
   end
  ,"aquarium exit")
  
 --fishing
 add_interactable(407,70,460,100
  ,"sTART fISHING"
  ,function()start_fishing()end
  ,"fishing zone")
end


--== collision ==-----------------


function col(a,b)
 --check if hb
 --if(a.hb==nil)debug[8]=a.id..":invalid hb"
 --if(b.hb==nil)debug[8]=b.id..":invalid hb"
 ahb=a.hbox
 bhb=b.hbox

 if(
  ((ahb.x1>=bhb.x1 and ahb.x1<=bhb.x2)
  or (ahb.x2>=bhb.x1 and ahb.x2<=bhb.x2))
 and 
  ((ahb.y1>=bhb.y1 and ahb.y1<=bhb.y2)
  or (ahb.y2>=bhb.y1 and ahb.y2<=bhb.y2))
  ) then 
   return true
 end

 return false
end
__gfx__
0077000000770000000077000000770000000770000000000000777777770000eeeeeeee000000000eeeeeeeeeeeeee0066065000050500089230000bbbbbbbb
07cb700007bc70000007cc700007cc7000007cc7000000000007888888887000ecb5bc5d09f0f9000e333333333333d0005550000005000089235660b452377b
07ccb7777bcc70000007cb700007cb7000007cb7000000000078899889988700ebbbbb5d089f98000e336333333353d00404040000ddd00088225550b452377b
07bbbbbbbbbb700000007b700007b7000007bb70000000009978899889988799eb7b7b5d089998000e365533333544d0004440007777777777777777b452377b
77bbb7bbb7bb770000007bb70007b7000007b700000000008878888888888788e5bcb55d008980000e3373333b3373d007aaa7007accccc77ccccca7b442277b
07bbb7bbb7bb7000000007b70007bb770007bb77000000007799999999999977e4aaa44d500800500e337333313373d007baa7007abbbbb77bbbbba7baaaaaab
77bbbbbcbbbb7700000007bb000077bb000077bb000000000778888888888777dddddddd450605400e665666656656d007bbb7007abbbbb77bbbbba7bde7777b
007bbbbbbbb7000000000077000000770000007700000000077777777777777000000000045654000eddddddddddddd0007770007abbffb77bffbba7bde7777b
0007aaaaaa7000000000777bbbbb70000000777bbbbb700000000000000000000077770000040000cccccccccccccccc000006507abbccb77bccbba7bde9998b
007bbbbbbb7000000007cccbbbbbb7000007cccbbbbb700000000000000000000788887001233300bbbbbbbbbbbbbbbb060050057abbbbb77bbbbba7bdd8888b
07bbabbbb70000000007bbbaaaabab700007bbbaaabb700000000000000000000789987001233300bbbbbbbbbbbbbbbb005006057abbbbb77bbbbba7baaaaaab
07babbbbb7000000007b7ba7777a7ab70007bba777ab7000eeeee0007700000099899899012333007777777777777777005000047abbbbb77bbbbba7b567777b
07bbb77bb770000007ba7b7007a707a70007ba707a7a7000ddddd0070070000088777788012233000aa0000000000aa0050060407abbbbb77bbbbba7b567777b
07ab7bc7bbc7000007a77a7007a70070007ba7007a7ab700d7d7d7700455000079999997012233000ab0000000000ab0005454007aaaaaa77aaaaaa7b567777b
07aaaaa7aaa7000000707aa707aa7000007a7a70077ab700ddddd0004606500078888887011222000ab0000000000ab00baaaab07777777777777777b557777b
007777707770000000000777007770000007777000077000777770005000500007777770011111000ab0000000000ab00077770000aaa000000aaa00baaaaaab
3ffffffffffffffffffffff3bbbbbbbb003333000000003200000065000000980cccccccccccccc000dffd0000000000000e000000000300cccccccc0000ddd0
231111111111111111111132bbbbbbbb03211230000003200000065000000980cbbbbbbbbbbbbba700dfed0000ddd00000ded00000123000bbbbbbbb000d000d
213333333333333333333312bbbbbbbb32111123000032000000650000009800cbbbbbbbbbbbbba700dfed000fdedf0000d0d0000b222000bbbbbbbb000d000d
213333333333333333333312aaaaaaaa31111113000320000006500000098000cbbbbbbbbbbbbba700dffd00defffed000ded0000045600077777777000d000d
2133f3333333333333333312aaaaaaaa31111113002100000054000000870000cbbbbbbbbbbbbba700defd007deeed70000e000000445600000000000000ddd0
213f333333333333333333127777777731111113021000000540000008700000cbbbbbbbbbbbbba700defd007fdddf7000ded0000044560000000000000000d0
213f33333333333333333312777777772111111221e0000054e0000087e00000caaaaaaaaaaaaaa700defd007e7f7e7000d0d0000004456000000000000000d0
213f333333333333333333127777777721111112100000004000000070000000077777777777777000dffd007e7e7e7000ded0000000b00600000000000000dd
213f33333333333333333312bcccccca2222222200000000030206050000000000effe00213f3333eeeeeeeeeeeeeeee000e00000cccccc03333331200f0000d
213f33333333333333333312cabbbb7c21111112009880000030005000998800099ee890213f3333effffffeeffffffe00e0e00007bbbb70333333120ee0000d
213f33333333333333333312cbabb7ac311111130fffff007221f54700700700f870078f213f3333ef7ff7feeffffffe0e000e00007aac0033333312dd00000d
2133f3333333333333333312cbba7aac31111113fffffed07721d47707000070fe0000ef213f3333ef7777edef7ff7ede00600e0007aa60033333312dd00000d
213333333333333333333312cbb7baac311111139ffeed807c7777a789999998d970078d213f3333efeeeeedefffffede05460e0007a5c0033333312d000000d
213333333333333333333312cb7aabac3111111389ddd8707b7ba7a798888887088dd890213f3333deeeeeeddeeeeeedabbbba70007a4c0033333312d10000dd
232222222222222222222232c7aaaabcabbbbbba088887007b7ba7a79888888700deed00213f3333dddddddddddddddd0aaaa700007aa40033333312dd1111d0
311111111111111111111113accccccbaaaaaaaa007770007b7ba7a78777777800000000213f3333077007700770077000777000007a4c00333333120dddddd0
66666666666666666666666677777777788879887777777700000033333333333333333333000000122333331100000000000000cffffffcffffffffffffffff
666666666666666666666666777777777888778878888888000002222222222222222222222000001122222211000000000000000cffffc0fffffbbaffffbfff
5555555555555555555555557777777778888888788888880000222111111111111111111222000071111111111000000000000000000000ffffbccbaffbcbff
54545454545454545454545477777777788888887888888800032211111111111111111111223000a7111111111000000000000000000000ffffcffcbafcfcff
4444444444444444444444447777777778888888788888880032211177777777777777771112230077777777111100000000000000000000ffffcbffcbfffcff
7777777774777777777747777777777778888888788888883322117bbb7bbba7bbbba7bb771122337aaa7aaa111110000000000000000000fffffcfffcbbbcff
777777777747777777757777777777777888888878888888222117a7aa7aaaa7aaaaa7aa7a7112227bbb7bbb111111000cffffc000000000ffffffffffcccfff
77777777757777777777577777777777788888887888888811117ba777777777777777777aa711117777777711111110cffffffc00000000ffffffffffffffff
0000000000000000000000007777777777777777bb7acba7007acba7baaaa7bb777777777aba70003333322111111110000000ccffffffffc000000000000000
0090900000c0c00000007a007777777777777777777acba7007acba7777777777ff7ffa77aba7000222222111111110000ccccfffffffffffccccc0000000000
0089900000acc000bbbb7abb77edd77777777777bb7acba7007acba7ba7bbbbb7cf7cfa77aba700011111117111110000cffffffffffffffffffffc000000000
0088900000aac00077777a7777ddd7777ed77777aa7acba7007acba7aa7bbbaa7cc7cca77aba70001111117a11110000fffffcffffffffffffcfffff00000000
050500000505000000007a0077ddd7777dd77777777acba7007acba777777777777777777aba70007777777711100000cfffcfcffcffffcffcfcfffc00000000
0045400000454000bbbb7abb7777777777777777bb7acba7007acba7bbbba7bb7ff7ffa77aba7000aa7aaaa711100000bcffffcffbccccbffcffffcb00000000
000400000004000077777a7777777ed777777777aa7acba7007acba7bbaaa7bb7cf7cfa77aba7000bb7bbbb711000000abccccbfffbbbbfffbccccba00000000
00040000000400000000770077777dd777777777777acba7007acba7777777777aa7aaa77aba700077777777110000000abbbbffffffffffffbbbba000000000
00000000000000000000000009090000b878a7bb7aba7ba7007acba7bbbaa7bbbbbaa7bb7aba700000777700111111110abbbbffffffffffffbbbba0aaabbbba
00000000066666600000000080008000778877777aba7777007a54a777777777777777777aba7000ab7cc7ba01111110abccccbfffbbbbfffbccccbaabbb7ebb
00000000656656660000000008080009b778bbbb7aba7bbb0075cb47b67bbbbbba7bb5b47a6a70007abbbba700111110bcffffcffbccccbffcffffcbbbb7afbb
00000006665565656000000000880880454b6baa7aba7aaa0075cba4aa5b5baaaa7bbb5a7ab5700077aaaa7700011100cfffcfcffcffffcffcfcfffcbb7abfbb
00000065656656566600000090088009744477777aba7777007a6ba474777577775777747aba40007c7777a700011100fffffcffffffffffffcfffffb7abb8bb
0000006656555b656500000008880000de4ee7bb7aba7bb7005acba44bbb574bb4bba7bb7ab470007b7ba7a7000110000cffffffffffffffffffffc0bbbbbbbc
000005654555bca456500000800800007ddd77bb7aba7aa70074b5a4b4a4a4b5bb4aa7bb7a4a70007b7ba7a70001100000ccffffffffffffffffcc00000ab000
0000065554455a454560000000080000777777777aba7777004a4a4747474747747777774ab470007b7ba7a700001000000000ccffffffffcc000000000ab000
0006565544444444565660000011110000060000000000000000000000c111000000000000000000000000007777777700000111111111111100000088000088
056565b5454444545565665001111110005000000030030000600060c7b1c1100011110001100000000110007bcccbb700001111111111111110000080000008
54545bca545445455656556511111111000400000300300000050600bcbcb1110111111011110000001111007aaaaaa700011111111111111111000000000000
454545a5654444556b45645411111111004111000030030000500050ababa1110111111011110000001111007777777700011111111111111111000000000000
5444545555555555bca4444511111111001111100003001005006005ababa1110111111001100000000110000000000000011111111111111111000000000000
44444545454555454a444444011111100011111000100100040005047a1a11110111111000000100000000000000000000011111111111111111000000000000
44444444545454544444444400111100001111100100100000404004011111100011110000001110000000000000000000001111111111111111000080000008
04444444444444444444444000000000000111000010010004004040001111000000000000000100000000000000000000000111111111111110000088000088
000111100000000000000000000000000000000000000000000000006060000000eee00000060600000c00c00000000000000000000000000000000000000000
01111111110000000000000000000000000000000000000000000000505000000eedde000065600000b0000c40000000000000000000003f1000000000000000
1111111111111000000000000000000000000000000000000000000005656500ed7dd40e044440000bbb000b0445600000000000000033210000000000000000
111111111111111000000000000000000000000000000000000000006656565044de441041555406b7bbb0ba4155550600000000000322100000000000000000
111111111111111000000000000000000000000000000000000000005056565601444101cbbbb450abbbaba0fffeedf000000000003221200000000000000000
1111111111111000000000000000000000000000000000000000000044141414001110000aaa40040aaa0ab00dddd00d000000000f32121100000000000033ff
0111111111000000000000000000000000000000000000000000000001717170000e00000005000000b000ab000e000000000000f221212110000003000f2220
00011110000000000000000000000000000000000000000000000000000000000000f00000006000000c000a0000f00000000000333322222200002000322200
000000000000000000000000000000000000000000000000000000000000000000000000000000000cccbc000000f00000000003222223333311112033222100
00000000000000000000000000000000000000000000000000000000000000000000000000000000c7bbabc0000c000000003332232233333333333322211000
0000000000000000000000000000000000000000000000000000000000000000000ff000000ef0000aaa0abc00c7c000332222f7232233333333322311100000
00000000000000000000000000000000000000000000000000000000000000000ffeef0f0ff33f090b0b00bb07c7b70c00011177322223333222221122210000
0000000000000000000000000000000000000000000000000000000000000000e7eddeede722229800c0c0cbc7b7b7b000000011111122222211112011221000
00000000000000000000000000000000000000000000000000000000000000000dd777d00ddd7780000000ca07b7a70a00000000022211111120002000112000
0000000000000000000000000000000000000000000000000000000000000000000e000d000e00080c000cba00ab700000000000003220000020000300001230
00000000000000000000000000000000000000000000000000000000000000000000f0000000f00000bbbaa0000a00000000000000033f000003000000000000
00000000000000000000000000000000000000000000000000000000000000000000009000000000000000005544000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000009800090000000000005564000000000000cc000000000007700000000000
0000000000000000000000000000000000000000000000000000000000000000099980098000ccc0000005664000000000000cbba00000000070070000000000
000000000000000000000000000000000000000000000000000000000000000099f79988000c999800005556640005500000cbbba00000000700007000000000
000000000000000000000000000000000000000000000000000000000000000099779999999999870005666555505665000aaaaaaaa00000cc00065550000000
0000000000000000000000000000000000000000000000000000000000000000899998889887888705565566666566400abbddbbddba0aa0fc00654445000066
000000000000000000000000000000000000000000000000000000000000000008878777877077705665f75666646400abf7bddbbddbadda0006545444550545
000000000000000000000000000000000000000000000000000000000000000000000890089000004565775665546400ab77bddbbddbddda00654f1444444450
000000000000000000000000000000000000000000000000000000000000000000000056560000000446556656446640aaaaa77aa77a77770044511444114150
000000000000000000000000000000000000000000000000000000000000000000044444456000000004555554004664077a77aa77a707700004455411140415
00000000000000000000000000000000000000000000000000000000000000006445555554440046000044454000044000077777777000000600041111400044
0000000000000000000000000000000000000000000000000000000000000000057f9999ccc564600000046400000000000007aa700000000055411114050000
000000000000000000000000000000000000000000000000000000000000000000558888999c4850000000560000000000000077000000000000544440000000
0000000000000000000000000000000000000000000000000000000000000000654bbbbbccc40495000000046000000000000000000000000000005110000000
00000000000000000000000000000000000000000000000000000000000000000000450004500044000000000000000000000000000000000000000551000000
00000000000000000000000000000000000000000000000000000000000000000000046000600000000000000000000000000000000000000000000000000000
07abbabba777aaa70007777777777007abbb70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77ababb7770777770777abbbbbbb7707abbb70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7abbbbb70000000077aabbbbbbbbb777abbb77777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7abbbb77000000077abbbbbbbbabbbbbbbbbbbbbb770000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7abbbb7000000007abbbbbbbbbbabbbbbbbbbbbbbb70000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7abbb77000000077abbbbb777abbbbbbbbbbbbbbbb70000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7abbb7000000007abbbbb7707abbbbaaabbbbaaaaa70000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7abbb7000000707ab7bb77007a7bb777abbb77777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7abbb7700000077ab7bb70007a7bb707abbb70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7abbbb700000007abbb770077abbb777abbb70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7abbbb770000777abbb70007abbb7707abbb70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7aabbbb70000007abbb77077abbbb707abbb70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77abbbb77707777abbbb777abbbb7707abbb77777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07aabbbbb777abbbbbbbbbbbbbbbb777abbbb77abb70000000000000000000000000000000000000000000000000000000000000000000000000000000000000
077abbbbbbbbbbbbabbbbbbbbbbbb707abbbbbbbbb70000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007aaabbbbbbbbb7abbbbbbbbbbbb707aaaaabbbbb70000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00777aabbbbbbbb7aaabbb11111111111111abbbbb11111100000000000000000000000000000000000000000000000000000000000000000000000000000000
000077aaaaaaaa7777aaaa12222222212221aaaaa111222100000000000000000000000000000000000000000000000000000000000000000000000000000000
00000777777777700777771222222221222111111111222100000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000001222111111222112222211222111110000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000001222100001111122222221222122211000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000001222111111222122211221222222221000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000001222222211222122222111222222221000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000001333333311333113333331333113331000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000001222111111222111222221222112221000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000001333100001333133311331333113331000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000001333100001333133333331333113331000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000001222100001222112222211222112221000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000001111100001111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000808080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
000046490000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007d7e000000000000000000000000000045454545454545454545454545454545454545454545454545454545454545450000004c00000000000000000000004c
000065550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007d4b760000000000000000000000000045454545454545454545454545454545454545454545454545454545454545455e4c5c6d5e4c00000000000000005c6d
0000654a4900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007d7d7d7e00000000000000000000000045454545454545454545454545454545454545454545454545454545454545454f5d6d5d4e4f5e00004c0000006c5d4e
000065676900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007d7d5b0000000000000000000000000045454545454545454545454545454545454545454545454545454545454545456e4d4d6c5d5e4d005c5d5e4c00004d6c
004647484749000000000000000000000000000000000000000000000000000000000046474749000000000000000000000000000000000000000000000000007d7d0000007a630000000000000000004545454545454545454545454545454545454545454545454545454545454545000000004d4d0000006c4e4f5e000000
006657575759464749000000000000000000000000000000000000000000000000000056575859000000000000000000000000000000000000000000000000007d7d0000007c7d7e00000000000000004545454545454545454545454545454545454545454545454545454545454545000000000000000000004d4d00000000
005657585769655855000000000000000000000000004649000000000000000000000056675759000000000000000000000000000000000000000000000000007d7d000074006b000000000000000000454545454545454545454545454545454545454545454545454545454545454500000000000000000000000000000000
00566858574a656455000000000000000000000000464748474946484900000000004647485a69000000000000000000000000000000000000000000000000007d5b0000000000000000000000000000454545454545454545454545454545454545454545454545454545454545454500000000000000004c00000000000000
0056574757644a484749000000000000000000000056575868655567690000000000565768574a474848490000000000000000000000000000000000000000007d0000760000000077007500000000004545454545454545454545454545454545454545454545454545454545454545000000000000005c6d5e4c4c00000000
006657685765575757590000000000000000000000565747574a47484849000000005657585757575768590000000000000000000000000000000000000000007d4b007300000000007c7d7e00000000454545454545454545454545454545454545454545454545454545454545454500000000005c5e5c5d6d4e4f5e000000
005657575765685845590000006061620000000000565758574557585759606162005657585745575857590000000000606162000000000000000000000000007d7d00007879000000000000000000004545454545454545454545454545454545454545454545454545454545454545000000005c5d6e006c5d6e4d00000000
526668646765646744690050527071725260625051666847674464486769707172526667485744644867696061626f00707172003700000000000000000000007d5b0000000000000000000000000000454545454545454545454545454545454545454545454545454545454545454500000000004d0000004d000000000000
414040414242424042414040414040404140404042404040404041424040404140424040404140404140404040404240404140404200000000000000000000007d4b7600000000000000000000000000454545454545454545454545454545454545454545454545454545454545454500000000000000000000000000000000
434343434343434343435443434343434343434343435443434343434343434343434343434343434354434343434343434343434300000000000000000000007d7d7d7e000000000074000063000000454545454545454545454545454545454545454545454545454545454545454500000000000000000000000000000000
4343434343434343434343434343435343434343434343434343434354434343434343434343434343434343544343437d7d7d7d7d00000000000000000000007d7d7d4b0000000000007c7d7d7e0000454545454545454545454545454545454545454545454545454545454545454500000000000000000000000000000000
4343534343434343434343544343434343434343434343435343434343434343434343434343435443434343434343547d7d7d7d7d00000000000000000000007d7d7d7d7e0000000000006b00007700454545454545454545454545454545454545454545454545454545454545454500000000000000000000000000000000
4545454545454545454545454545454543434343434343434343434343434343434343434343434343434343434343437d7d7d7d5b000000000000000000000043434343434343434343434343434343434343434343434343434343434343435557575757576857575757576757575757575757685757575757576857575765
4545454545454545454545454545454543434343434343434343434343434343434343434343434343434343434343437d7d7d7d00000000000000000000000043434343434343434343434343434343434343434343434343434343434343435500002c00000000000000000000000000000000000000000000000000000065
4545454545454545454545454545454543434343434343434343434343434343434343434343434343434343434343437d7d7d7d00000000000000000000000043434343434343434343434343434343434343434343434343434343434343435500003c00202121212200000000000000000000acad000000008c8d8e8f0065
4545454545454545454545454545454543434343434343434343434343434343434343434343434343434343434343437d7d5b7d00000000000000000000000043434343434343434343434343434343434343434343434343434343434343435500000000395f5f5f3e000000880000b8b90000bcbd00a8a9009c9d9e9f0065
4545454545454545454545454545454543434343434343434343434343434343434343434343434343434343434343437d7d006b000000000000000000000000434343434343434343434343434343434343434343434343434343434343434355000c0f00303131313200000000000000000000000000000000000000000065
4545454545454545454545454545454557685757575767575757575768576757575757576867576857575768576757577d7d0000000063787400000000000000575757575757575757575757575768575757685757675757685757576857675755007b7b004748474847000000000000008a0000008b00000000000000000065
4545454545454545454545454545454555002c0000000000000000002a000000655500000000000000000000002c00575b6b0000007c7d7d7e000000000000005500000000002c0000000000000000000065000000000000000000000000006555000000002e2e2e2e2e00000098000000000000000000000000009b00000065
4545454545454545454545454545454555002c0000000000252627002a000000655500000000000000000000002c00577e00760000006b7879000000000000005500002400003c00002400000000001c006500000000000000000000000000655500380000202121212200000000000000000000000000000000000000000065
4545454545454545454545454545454555003c0000282900000000002a000000655500000024000000000024003c00577e0073000000000000007500000000005500003400000000003400000000000f006500000000000000000000000000655500000c0f395f5f5f3e0000aaab000000000000890000009a00000000000065
454545454545454545454545454545457b00000000000000350000002a0038007b7b0009003400000000003400000c574b0000000000000000007300000000002e000000000008000000000000000f1f002e00000000000000000000000000657b00000f1f30313131320000babb000000000000000000000000000000000065
454545454545454545454545454545450000002d00000000333600002a2b00001c0000330c00000000000000000f0f577d7e000000000077000000000000000000000f1c00090d0e000a0b00000c1f0f000000000000000000000000000000650000001f0f47474748481c0000000087000000000000000000000000aeaf0065
454545454545454545454545454545450000363d001a1b00333336003a3b3b00330000333333001a1b00001c001f1f677d4b750000000079780000000000000000001a1b00191d1e001a1b0000331f1f000000000000000000000000000000650000000f0f1a2e2e2e2e1b0000000000000000000000000000990000bebf0065
4545454545454545454545454545454523232323232323232323232323232323232323232323232323232323232323237d7d7d7e00000000000000000000000023232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323
4545454545454545454545454545454543434343434343434343434343434343434343434343434343434343434343437d7d5b0000006300000000000000000043434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343
4545454545454545454545454545454543434343434343434343434343434343434343434343434343434343434343437d7d4b7600747300000000000000000043434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343
4545454545454545454545454545454543434343434343434343434343434343434343434343434343434343434343437d7d7d7d7e000000000000000000000043434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343
__sfx__
911000000505005055110051c005100550c0051005500005090050000505055000051005500005050550000505050050550000504005100550c00510055000050900500005050552400506055240050000511005
511000000070600706007061571115731187561c746217260070600706007061570115736187561c746187261c70600706007061c7111c731187561c746217260070600706007062470124736187561c7461c726
9110000007050070550000504005110550c005110550c0050900500005070550c0051105011055070050000510050100551000010005100050c005100050c00513050130551f0001f0051c005240051c00524005
5110000000706007060070621711227311a7561d7461a726007060070600706157001f7361a756167461d7261c70600706007061c7111c731187561c746217261c70600706007061a7111a7311f7511c7461f726
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010400000e5440e5410f5411053111521115111151510500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
01 00014344
02 02034344

